module.exports = function () {
  const tutorials = require('../tools/generators/gen-tutorials').call(this).join(', ');
  const plugins = require('../tools/generators/gen-plugins').call(this).join(', ');
  const commands = require('../tools/generators/gen-commands').call(this).join(', ');
  const general = require('../tools/generators/gen-general').call(this).join(', ');
  const technical = require('../tools/generators/gen-technical').call(this).join(', ');
  const specification = require('../tools/generators/gen-specification').call(this).join(', ');
  const samples = require('../tools/generators/gen-samples').call(this).join(', ');
  const questions = require('../tools/generators/gen-faq').call(this).join(', ');
  const codes = require('../tools/generators/gen-codes').call(this).join(', ');
  const types = require('../tools/generators/gen-types').call(this).join(', ');
  const tools = require('../tools/generators/gen-tools').call(this).join(', ');
  const bundlers = require('../tools/generators/gen-bundlers').call(this).join(', ');
  const overviews = require('../tools/generators/gen-overview-page').call(this).join(', ');

  return `
const { lazy } = require('react');

function populate(source) {
  const results = [];

  source.forEach(item => {
    const title = item.section;
    const [result] = results.filter(m => m.title === title);

    if (result) {
      result.links.push(item);
    } else {
      results.push({
        title,
        links: [item],
      });
    }
  });

  return results;
}

module.exports = {
  guidelines: {
    title: 'Guidelines',
    sections: [
      ...populate([${tutorials}]),
      {
        title: 'Example',
        links: [${samples}],
      },
    ],
  },
  reference: {
    title: 'Reference',
    sections: [
      {
        title: 'Technical',
        links: [${technical}],
      },
      {
        title: 'General',
        links: [${general}],
      },
      {
        title: 'Specification',
        links: [${specification}],
      },
      {
        title: 'FAQ',
        links: [${questions}],
      },
      {
        title: 'Codes',
        links: [${codes}],
      },
    ],
  },
  tooling: {
    title: 'Tooling',
    sections: [
      ...populate([${commands}]),
      {
        title: 'Piral CLI - Bundlers',
        links: [${bundlers}]
      },
      {
        title: 'Others',
        links: [${tools}],
      },
    ],
  },
  plugins: {
    title: 'Plugins',
    sections: [
      {
        title: 'Overview',
        links: [${overviews}],
      },
      ...populate([${plugins}])
    ],
  },
  types: {
    title: 'Types', 
    sections: [
      {
        title: 'Framework',
        links: [${types}].filter(m => !m.id.endsWith('-utils')),
      },
      {
        title: 'Utilities',
        links: [${types}].filter(m => m.id.endsWith('-utils')),
      },
    ],
  },
};`;
};
