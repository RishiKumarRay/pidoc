const { resolve } = require('path');
const { sitemap, docsPath, baseDir } = require('../tools/meta');

// interface SingleSection {
//   title: string;
//   links: Array<GenerateContent>;
// }

// interface GenerateContent {
//   generator: string;
//   segment: string;
//   dir: string;
// }

// interface Sitemap {
//   [chapterName: string]: {
//     title: string;
//     sections: Array<SingleSection | GenerateContent>;
//   };
// }

function getGeneratorPath(genPath, options) {
  if (genPath === 'custom') {
    return resolve(baseDir, options.path);
  } else {
    return resolve(__dirname, '../tools/generators', genPath);
  }
}

function makeLinks(items, basePath) {
  const links = [];

  for (const item of items) {
    if (typeof item.generator === 'string') {
      const { generator, ...options } = item;
      const genPath = getGeneratorPath(generator, options);
      const gen = require(genPath);
      const content = gen.call(this, basePath, docsPath, options).join(', ');
      links.push(`...populate([${content}])`);
    } else {
      links.push(`{
        "title": ${JSON.stringify(item.title)},
        "links": [${makeLinks(item.links, basePath)}],
      }`);
    }
  }

  return links.join(', ');
}

function makeContent(sitemap) {
  const content = Object.keys(sitemap).map(
    key => `${JSON.stringify(key)}: {
      "title": ${JSON.stringify(sitemap[key].title)},
      "sections": [${makeLinks(sitemap[key].sections, '/' + key)}],
    }`
  ).join(',');

  return `{
    ${content}
  }`;
}

module.exports = function () {
  const content = makeContent(sitemap);

  return `
const { lazy } = require('react');

function populate(source) {
  const results = [];

  source.forEach(item => {
    const title = item.section;
    const [result] = results.filter(m => m.title === title);

    if (result) {
      result.links.push(item);
    } else {
      results.push({
        title,
        links: [item],
      });
    }
  });

  return results;
}

module.exports = ${content};
`;
};
